// import { createRequire } from "module";
// const require = createRequire(import.meta.url);
const { Translate } = require("@google-cloud/translate").v2;

const translate = new Translate({ key: process.env.GOOGLE_TRANSLATE_KEY });
const languages = {
    "abkhaz": "ab",
    "acehnese": "ace",
    "acholi": "ach",
    "afrikaans": "af",
    "albanian": "sq",
    "alur": "alz",
    "amharic": "am",
    "arabic": "ar",
    "armenian": "hy",
    "assamese": "as",
    "awadhi": "awa",
    "aymara": "ay",
    "azerbaijani": "az",
    "balinese": "ban",
    "bambara": "bm",
    "bashkir": "ba",
    "basque": "eu",
    "batak karo": "btx",
    "batak simalungun": "bts",
    "batak toba": "bbc",
    "belarusian": "be",
    "bemba": "bem",
    "bengali": "bn",
    "betawi": "bew",
    "bhojpuri": "bho",
    "bikol": "bik",
    "bosnian": "bs",
    "breton": "br",
    "bulgarian": "bg",
    "buryat": "bua",
    "cantonese": "yue",
    "catalan": "ca",
    "cebuano": "ceb",
    "chichewa (nyanja)": "ny",
    "chinese": "zh-CN",
    "chinese (simplified)": "zh-CN",
    "chinese (traditional)": "zh-TW)",
    "chuvash": "cv",
    "corsican": "co",
    "crimean tatar": "crh",
    "croatian": "hr",
    "czech": "cs",
    "danish": "da",
    "dinka": "din",
    "divehi": "dv",
    "dogri": "doi",
    "dombe": "dov",
    "dutch": "nl",
    "dzongkha": "dz",
    "english": "en",
    "esperanto": "eo",
    "estonian": "et",
    "ewe": "ee",
    "fijian": "fj",
    "filipino (tagalog)": "fil",
    "finnish": "fi",
    "french": "fr",
    "french (french)": "fr-FR",
    "french (canadian)": "fr-CA",
    "frisian": "fy",
    "fulfulde": "ff",
    "ga": "gaa",
    "galician": "gl",
    "ganda (luganda)": "lg",
    "georgian": "ka",
    "german": "de",
    "greek": "el",
    "guarani": "gn",
    "gujarati": "gu",
    "haitian creole": "ht",
    "hakha chin": "cnh",
    "hausa": "ha",
    "hawaiian": "haw",
    "hebrew": "iw",
    "hiligaynon": "hil",
    "hindi": "hi",
    "hmong": "hmn",
    "hungarian": "hu",
    "hunsrik": "hrx",
    "icelandic": "is",
    "igbo": "ig",
    "iloko": "ilo",
    "indonesian": "id",
    "irish": "ga",
    "italian": "it",
    "japanese": "ja",
    "javanese": "jw",
    "kannada": "kn",
    "kapampangan": "pam",
    "kazakh": "kk",
    "khmer": "km",
    "kiga": "cgg",
    "kinyarwanda": "rw",
    "kituba": "ktu",
    "konkani": "gom",
    "korean": "ko",
    "krio": "kri",
    "kurdish (kurmanji)": "ku",
    "kurdish (sorani)": "ckb",
    "kyrgyz": "ky",
    "lao": "lo",
    "latgalian": "ltg",
    "latin": "la",
    "latvian": "lv",
    "ligurian": "lij",
    "limburgan": "li",
    "lingala": "ln",
    "lithuanian": "lt",
    "lombard": "lmo",
    "luo": "luo",
    "luxembourgish": "lb",
    "macedonian": "mk",
    "maithili": "mai",
    "makassar": "mak",
    "malagasy": "mg",
    "malay": "ms",
    "malay (jawi)": "ms-Arab",
    "malayalam": "ml",
    "maltese": "mt",
    "maori": "mi",
    "marathi": "mr",
    "meadow mari": "chm",
    "meiteilon (manipuri)": "mni-Mtei",
    "minang": "min",
    "mizo": "lus",
    "mongolian": "mn",
    "myanmar (burmese)": "my",
    "ndebele (south)": "nr",
    "nepalbhasa (newari)": "new",
    "nepali": "ne",
    "northern sotho (sepedi)": "nso",
    "norwegian": "no",
    "nuer": "nus",
    "occitan": "oc",
    "odia (oriya)": "or",
    "oromo": "om",
    "pangasinan": "pag",
    "papiamento": "pap",
    "pashto": "ps",
    "persian": "fa",
    "polish": "pl",
    "portuguese": "pt",
    "portuguese (portugal)": "pt-PT",
    "portuguese (brazil)": "pt-BR",
    "punjabi": "pa",
    "punjabi (shahmukhi)": "pa-Arab",
    "quechua": "qu",
    "romani": "rom",
    "romanian": "ro",
    "rundi": "rn",
    "russian": "ru",
    "samoan": "sm",
    "sango": "sg",
    "sanskrit": "sa",
    "scots gaelic": "gd",
    "serbian": "sr",
    "sesotho": "st",
    "seychellois creole": "crs",
    "shan": "shn",
    "shona": "sn",
    "sicilian": "scn",
    "silesian": "szl",
    "sindhi": "sd",
    "sinhala (sinhalese)": "si",
    "slovak": "sk",
    "slovenian": "sl",
    "somali": "so",
    "spanish": "es",
    "sundanese": "su",
    "swahili": "sw",
    "swati": "ss",
    "swedish": "sv",
    "tajik": "tg",
    "tamil": "ta",
    "tatar": "tt",
    "telugu": "te",
    "tetum": "tet",
    "thai": "th",
    "tigrinya": "ti",
    "tsonga": "ts",
    "tswana": "tn",
    "turkish": "tr",
    "turkmen": "tk",
    "twi (akan)": "ak",
    "ukrainian": "uk",
    "urdu": "ur",
    "uyghur": "ug",
    "uzbek": "uz",
    "vietnamese": "vi",
    "welsh": "cy",
    "xhosa": "xh",
    "yiddish": "yi",
    "yoruba": "yo",
    "yucatec maya": "yua",
    "zulu": "zu"
  }
  

export async function translateText(text, targetLanguage) {
    const languageCode = languages[targetLanguage.toLowerCase()];
    
    if (!languageCode) {
        throw new Error(`Language ${targetLanguage} not supported`);
    }

    const [translation] = await translate.translate(text, languageCode);
    console.log(`Translated text: ${translation}`);
    return translation;
}

function getLanguageNameFromCode(code) {
    return Object.keys(languages).find(key => languages[key] === code) || "english";
}

export async function detectLanguage(text) {
    let detections = await translate.detect(text);
    detections = Array.isArray(detections) ? detections : [detections];
    if(detections.length != 0) {
        console.log(getLanguageNameFromCode(detections[0].language));
        return getLanguageNameFromCode(detections[0].language);
    }

    else {
        return "english";
    }
}

// Example usage
// translateText("Dear Professor Gray, do you love my work?", "fr").then(console.log);

// use this to find language ids: https://cloud.google.com/translate/docs/languages